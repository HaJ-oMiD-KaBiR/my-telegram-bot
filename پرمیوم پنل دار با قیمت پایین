from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes, MessageHandler, filters

TOKEN = '7746893979:AAFEtrJdh0lTbzX5W14M8So-AlVHrliB3lk'

PHOTO_URL = "https://ibb.co/3YRhQwC7"

WALLET_ADDRESS = "TAThTmtJPRjH13Zcd6PHDfJU85V2S4jjnQ"

TEXTS = {
    'en': {
        'select_language': 'Select the language of the bot.',
        'premium_message': 'Telegram Premium Subscription\n\nGo beyond the limits, get exclusive features and support the development of Telegram by subscribing to Telegram Premium.\n\n📌Please select your subscription duration.',
        '1_month': '1 Month',
        '3_months': '3 Months',
        '6_months': '6 Months',
        '1_year': '1 Year',
        'payment_message': 'Please transfer the amount above in USDT (TRC20) to the wallet address below to activate Telegram Premium.\n\n📌 Please complete the payment using the button below and restart the bot with /start.\n\n⚠️ If you experience issues, manually send the amount to the wallet address below, take a screenshot of the transaction, and send it in this bot.',
        'prices': {
            '1_month': 6.0,
            '3_months': 11.0,
            '6_months': 15.0,
            '1_year': 27.0
        }
    },
    'fa': {
        'select_language': 'زبان ربات را انتخاب کنید.',
        'premium_message': 'اشتراک تلگرام پریمیوم\n\nبا اشتراک تلگرام پریمیوم، از محدودیت‌ها فراتر بروید، ویژگی‌های انحصاری دریافت کنید و از توسعه تلگرام حمایت کنید.\n\n📌لطفاً مدت اشتراک خود را انتخاب کنید.',
        '1_month': '۱ ماهه',
        '3_months': '۳ ماهه',
        '6_months': '۶ ماهه',
        '1_year': '۱ ساله',
        'payment_message': '💰 مبلغ فوق را به USDT (TRC20) به آدرس کیف پول زیر انتقال دهید تا اشتراک تلگرام پریمیوم شما فعال شود.\n\n📌 لطفاً مبلغ را از طریق دکمه زیر پرداخت کنید و ربات را مجدداً /start کنید.\n\n⚠️ در صورت بروز مشکل در پرداخت، مبلغ را به آدرس کیف پول زیر ارسال کنید، عکس از تراکنش بگیرید و در همین ربات ارسال نمایید.',
        'prices': {
            '1_month': 6.0,
            '3_months': 11.0,
            '6_months': 15.0,
            '1_year': 27.0
        }
    },
    'ru': {
        'select_language': 'Выберите язык бота.',
        'premium_message': 'Подписка на Telegram Premium\n\nПолучите эксклюзивные функции и поддержите развитие Telegram, оформив подписку на Telegram Premium.\n\n📌Пожалуйста, выберите срок подписки.',
        '1_month': '1 месяц',
        '3_months': '3 месяца',
        '6_months': '6 месяцев',
        '1_year': '1 год',
        'payment_message': '💰 Переведите указанную сумму в USDT (TRC20) на указанный ниже кошелек, чтобы активировать Telegram Premium.\n\n📌 Пожалуйста, выполните оплату через кнопку ниже и перезапустите бота командой /start.\n\n⚠️ Если возникнут проблемы с оплатой, отправьте сумму вручную на указанный ниже кошелек, сделайте скриншот транзакции и отправьте его в этот бот.',
        'prices': {
            '1_month': 6.0,
            '3_months': 11.0,
            '6_months': 15.0,
            '1_year': 27.0
        }
    },
    'ar': {
        'select_language': 'اختر لغة البوت.',
        'premium_message': 'اشتراك Telegram Premium\n\nتجاوز الحدود، واحصل على ميزات حصرية ودعم تطوير Telegram من خلال الاشتراك في Telegram Premium.\n\n📌الرجاء اختيار مدة الاشتراك.',
        '1_month': '1 شهر',
        '3_months': '3 أشهر',
        '6_months': '6 أشهر',
        '1_year': '1 سنة',
        'payment_message': '💰 الرجاء تحويل المبلغ أعلاه بعملة USDT (TRC20) إلى عنوان المحفظة أدناه لتفعيل اشتراك Telegram Premium.\n\n📌 الرجاء إكمال الدفع باستخدام الزر أدناه وإعادة تشغيل البوت باستخدام الأمر /start.\n\n⚠️ إذا واجهتك أي مشاكل، قم بإرسال المبلغ يدويًا إلى عنوان المحفظة أدناه، والتقط صورة للعملية وأرسلها في هذا البوت.',
        'prices': {
            '1_month': 6.0,
            '3_months': 11.0,
            '6_months': 15.0,
            '1_year': 27.0
        }
    }
}

ADMINS = {
    6270876509: "Owner",  
}

users_started = set()

active_users = {}

def generate_payment_link(amount):
    return f"https://link.trustwallet.com/send?asset=c8d2a6ad&address={WALLET_ADDRESS}&amount={amount}"

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    users_started.add(user_id)
    active_users[user_id] = active_users.get(user_id, 0) + 1

    keyboard = [
        [InlineKeyboardButton("English 🇬🇧", callback_data='en')],
        [InlineKeyboardButton("Русский 🇷🇺", callback_data='ru')],
        [InlineKeyboardButton("فارسی 🇮🇷", callback_data='fa')],
        [InlineKeyboardButton("العربية 🇸🇦", callback_data='ar')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(TEXTS['en']['select_language'], reply_markup=reply_markup)

async def language_selection(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    lang = query.data
    await query.answer()
    await query.message.delete()

    keyboard = [
        [
            InlineKeyboardButton(TEXTS[lang]['1_month'], callback_data=f'1_month_{lang}'),
            InlineKeyboardButton(TEXTS[lang]['3_months'], callback_data=f'3_months_{lang}')
        ],
        [
            InlineKeyboardButton(TEXTS[lang]['6_months'], callback_data=f'6_months_{lang}'),
            InlineKeyboardButton(TEXTS[lang]['1_year'], callback_data=f'1_year_{lang}')
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    caption = TEXTS[lang]['premium_message']

    await context.bot.send_photo(
        chat_id=query.message.chat.id,
        photo=PHOTO_URL,
        caption=caption,
        reply_markup=reply_markup
    )

async def price_selection(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    data = query.data
    await query.answer()

    try:
        parts = data.split('_')
        if len(parts) == 3:  # برای حالت‌های 1_month, 3_months, 6_months, 1_year
            duration, unit, lang = parts
            duration_key = f"{duration}_{unit}"
        else:
            raise ValueError("Invalid data format")

        if duration_key not in TEXTS[lang]['prices']:
            raise ValueError("Invalid duration")

        price = TEXTS[lang]['prices'][duration_key]
        payment_link = generate_payment_link(price)

        keyboard = [[InlineKeyboardButton("USDT (TRC20) Trust Wallet 💳", url=payment_link)]]
        reply_markup = InlineKeyboardMarkup(keyboard)

        payment_message = f"💰 Price : {price} USDT (TRC20)\n\n{TEXTS[lang]['payment_message']}\n\n📌 Wallet address:\n`{WALLET_ADDRESS}`"

        await context.bot.send_message(
            chat_id=query.message.chat.id,
            text=payment_message,
            reply_markup=reply_markup
        )

    except Exception as e:
        await query.message.reply_text("⚠️ An error occurred, please try again.")
        print(f"Error: {e}")

async def omid_panel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    if user_id not in ADMINS:
        await update.message.reply_text("You are not authorized to use this command.")
        return

    keyboard = [
        [InlineKeyboardButton("⁉️تعداد کاربران", callback_data='user_count')],
        [InlineKeyboardButton("⭐کاربران فعال", callback_data='active_users')],
        [InlineKeyboardButton("🌐پیام همگانی", callback_data='broadcast')],
        [InlineKeyboardButton("➕افزودن مدیر", callback_data='add_admin')],
        [InlineKeyboardButton("➖حذف مدیر", callback_data='remove_admin')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("Hello, dear administrator, welcome to the robot 👑", reply_markup=reply_markup)

async def handle_admin_actions(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    data = query.data
    await query.answer()

    if data == 'user_count':
        await query.message.reply_text(f"تعداد کاربران: {len(users_started)}")
    elif data == 'active_users':
        active_users_list = []
        for user_id, count in active_users.items():
            user = await context.bot.get_chat(user_id)
            username = user.username if user.username else f"User ID: {user_id}"
            active_users_list.append(f"{username}, Activity: {count}")
        await query.message.reply_text(f"کاربران فعال:\n" + "\n".join(active_users_list))
    elif data == 'broadcast':
        await query.message.reply_text("✅لطفاً پیام همگانی را ارسال کنید.")
        context.user_data['awaiting_broadcast'] = True
    elif data == 'add_admin':
        await query.message.reply_text("✅لطفاً آیدی عددی مدیر جدید را ارسال کنید.")
        context.user_data['awaiting_admin_id'] = True
    elif data == 'remove_admin':
        keyboard = [[InlineKeyboardButton(admin, callback_data=f"remove_{admin_id}")] for admin_id, admin in ADMINS.items() if admin_id != 6270876509]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.message.reply_text("🔍ادمینی که قصد دارید حذف کنید انتخاب کنید:", reply_markup=reply_markup)
    elif data.startswith('remove_'):
        admin_id = int(data.split('_')[1])
        if admin_id in ADMINS:
            del ADMINS[admin_id]
            await query.message.reply_text(f"❌ادمین با موفقیت حذف شد.")
        else:
            await query.message.reply_text("❌این آیدی در لیست مدیران وجود ندارد.")

async def add_admin(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    if user_id not in ADMINS:
        await update.message.reply_text("You are not authorized to use this command.")
        return

    admin_id = int(update.message.text)
    ADMINS[admin_id] = "Admin"
    await update.message.reply_text(f" ✅مدیر با آیدی {admin_id} افزوده شد.")

async def broadcast_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    if user_id not in ADMINS:
        await update.message.reply_text("You are not authorized to use this command.")
        return

    message = update.message.text
    for user in users_started:
        try:
            await context.bot.send_message(chat_id=user, text=message)
        except Exception as e:
            print(f"Error sending message to {user}: {e}")
    await update.message.reply_text("✅ پیام همگانی ارسال شد.")

def main():
    application = Application.builder().token(TOKEN).build()

    application.add_handler(CommandHandler('start', start))
    application.add_handler(CallbackQueryHandler(language_selection, pattern='^(en|ru|fa|ar)$'))
    application.add_handler(CallbackQueryHandler(price_selection, pattern='^\d+_(month|months|year)_(en|ru|fa|ar)$'))
    application.add_handler(CommandHandler('omid', omid_panel))
    application.add_handler(CallbackQueryHandler(handle_admin_actions))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, add_admin))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, broadcast_message))

    application.run_polling()

if __name__ == '__main__':
    main()